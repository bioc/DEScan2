// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpparma_get_disjoint_max_win
arma::mat rcpparma_get_disjoint_max_win(arma::mat z0, int sigwin, double zthresh, arma::uword nmax, bool verbose);
RcppExport SEXP _DEScan2_rcpparma_get_disjoint_max_win(SEXP z0SEXP, SEXP sigwinSEXP, SEXP zthreshSEXP, SEXP nmaxSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< int >::type sigwin(sigwinSEXP);
    Rcpp::traits::input_parameter< double >::type zthresh(zthreshSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_get_disjoint_max_win(z0, sigwin, zthresh, nmax, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DEScan2_rcpparma_get_disjoint_max_win", (DL_FUNC) &_DEScan2_rcpparma_get_disjoint_max_win, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_DEScan2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
